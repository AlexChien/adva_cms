<% content_for :filter do -%>
  <% form_tag admin_comments_path, :method => 'get', :id => 'comment_search' do -%>
    <label for="search" class="inline">
      <%= t(:'adva.comments.filter.show_comments') %>:
    </label>
    <select name="filter" id="filter_list">
      <%= options_for_select comments_filter_options, params[:filter] %>
    </select>
    <select name="state" id="states">
      <%= options_for_select comments_state_options, params[:state] %>      
    </select>
  	<% if @section -%>
  	  <%= hidden_field_tag :section_id, @section.id %>
  	<% elsif @content -%>
  	  <%= hidden_field_tag :content_id, @content.id %>
      <% end -%>
  	<%= text_field_tag 'query', params[:query], :id => 'query', :style => 'display: none' %>
    <input type="submit" id="button" value="<%= t(:'adva.comments.filter.go') %>" style="display: none" />
  <% end %>
<% end -%>

<ul id="comments_list">
  <% unless @comments.empty? %>
    <% @comments.each do |comment, i| %>
    <li class="<%= cycle 'alt', '' %>" id="<%= dom_id(comment) %>">
			<h4><%= link_to_content(comment.commentable, :namespace => nil) %></h4>
			<div class="actions">
				<%= comment.approved? ?
					    link_to(t(:'adva.comments.links.unapprove'), admin_comment_path(comment, "comment[approved]" => 0, :return_to => request.request_uri), :class => 'text', :method => :put) :
					 	  link_to(t(:'adva.comments.links.approve'), admin_comment_path(comment, "comment[approved]" => 1, :return_to => request.request_uri), :class => 'text', :method => :put) %> 
			  <%= link_to_edit(comment, :url => edit_admin_comment_path(comment, :return_to => request.request_uri)) %> 
			  <%= link_to_delete(comment, :url => admin_comment_path(comment, :return_to => request.request_uri)) %> 
			  <%= link_to_content_comment(t(:'adva.comments.links.view'), comment, :class => 'show') %>
			</div>
			<cite>
			  <%= comment.author_link %>
			  <%= "(#{comment.author_email})" %> 
			  <%= t(:'adva.comments.said_time_ago', :time => time_ago_in_words(comment.created_at)) %> 
			</cite>
			<blockquote>
			  <%= strip_tags(comment.body) %>
			</blockquote>
    </li>
    <% end %>
  <% else %>
    <li class="alt"><%= t(:'adva.comments.info.no_comments_for_query', :location => ((@content || @section) ? (@content || @section).type.to_s.downcase : 'site')) %></li>
  <% end %>
</ul>
